/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modelamientocolas;

import java.math.BigDecimal;

/**
 *
 * @author Juan K
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldLambda = new javax.swing.JTextField();
        jTextFieldMiu = new javax.swing.JTextField();
        jTextFieldLs = new javax.swing.JTextField();
        jTextFieldLq = new javax.swing.JTextField();
        jTextFieldWs = new javax.swing.JTextField();
        jTextFieldWq = new javax.swing.JTextField();
        jTextFieldP = new javax.swing.JTextField();
        jTextFieldPn = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldN = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldLambda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLambdaKeyReleased(evt);
            }
        });

        jTextFieldMiu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMiuKeyReleased(evt);
            }
        });

        jTextFieldLs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLsKeyReleased(evt);
            }
        });

        jTextFieldLq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLqKeyReleased(evt);
            }
        });

        jTextFieldWs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldWsKeyReleased(evt);
            }
        });

        jTextFieldWq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldWqKeyReleased(evt);
            }
        });

        jTextFieldP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPKeyReleased(evt);
            }
        });

        jTextFieldPn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPnKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("λ :");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setText("μ :");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setText("Ls :");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setText("Lq :");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setText("Ws :");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setText("Wq :");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel7.setText("ρ :");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel8.setText("Pn :");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel9.setText("n :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLs)
                            .addComponent(jTextFieldLq, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldLambda, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(jTextFieldMiu))))
                .addGap(180, 180, 180)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(169, 169, 169))
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldWs, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextFieldWq)
                                        .addComponent(jTextFieldP)
                                        .addComponent(jTextFieldPn, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)))))
                        .addGap(37, 37, 37))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldN, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLambda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMiu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldLq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("M/M/1", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 661, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("M/M/1");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldLambdaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLambdaKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
        String P0 = "";
        String n = this.jTextFieldN.getText();

        //P = λ / μ
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double PD = lambdaD / miuD;
            P = truncateDecimal(PD, 2) + "";

            this.jTextFieldP.setText(P);
        }

        //Po = 1 - (λ / μ)
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double P0D = 1 - (lambdaD / miuD);
            P0 = truncateDecimal(0, 2) + "";
        }        
        
        // Pn = (1 - p) * p^n      
        if (!P.equals("") && !n.equals("")) {
            double PD = Double.parseDouble(P);
            double PnD = (1 - PD) * Math.pow(PD, Double.parseDouble(n));
            Pn = truncateDecimal(PnD, 2) + "";

            this.jTextFieldPn.setText(Pn);
        }

        // Lq = λ^2 / μ * (μ - λ)
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double LqD = Math.pow(lambdaD, 2) / (miuD * (miuD - lambdaD));
            Lq = truncateDecimal(LqD, 2) + "";

            this.jTextFieldLq.setText(Lq);
        }

        // Ls = Lq + (λ / μ)       
        if (!lambda.equals("") && !miu.equals("") && !Lq.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double LqD = Double.parseDouble(Lq);
            double LsD = LqD + (lambdaD / miuD);
            Ls = truncateDecimal(LsD, 2) + "";

            this.jTextFieldLs.setText(Ls);
        }

        // Wq = Lq / λ
        if (!lambda.equals("") && !Lq.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double LqD = Double.parseDouble(Lq);
            double WqD = LqD / lambdaD;
            Wq = truncateDecimal(WqD, 2) + "";

            this.jTextFieldWq.setText(Wq);
        }

        // Ws = Wq + (1/μ)        
        if (!lambda.equals("") && !miu.equals("")) {
            double miuD = Double.parseDouble(miu);
            double WqD = Double.parseDouble(Wq);
            try {
                double WsD = WqD + (1 / miuD);
                Ws = truncateDecimal(WsD, 2) + "";

                this.jTextFieldWs.setText(Ws);
            } catch (NumberFormatException ex) {
                this.jTextFieldWs.setText("Error en el valor de μ.");
            }
        }
    }//GEN-LAST:event_jTextFieldLambdaKeyReleased

    private void jTextFieldMiuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMiuKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
        String P0 = "";
        String n = this.jTextFieldN.getText();

        //P = λ / μ
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double PD = lambdaD / miuD;
            P = truncateDecimal(PD, 2) + "";

            this.jTextFieldP.setText(P);
        }

        //Po = 1 - (λ / μ)
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double P0D = 1 - (lambdaD / miuD);
            P0 = truncateDecimal(0, 2) + "";
        }        
        
        // Pn = (1 - p) * p^n      
        if (!P.equals("") && !n.equals("")) {
            double PD = Double.parseDouble(P);
            double PnD = (1 - PD) * Math.pow(PD, Double.parseDouble(n));
            Pn = truncateDecimal(PnD, 2) + "";

            this.jTextFieldPn.setText(Pn);
        }

        // Lq = λ^2 / μ * (μ - λ)
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double LqD = Math.pow(lambdaD, 2) / (miuD * (miuD - lambdaD));
            Lq = truncateDecimal(LqD, 2) + "";

            this.jTextFieldLq.setText(Lq);
        }

        // Ls = Lq * (λ * μ)       
        if (!lambda.equals("") && !miu.equals("") && !Lq.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double LqD = Double.parseDouble(Lq);
            double LsD = LqD + (lambdaD * miuD);
            Ls = truncateDecimal(LsD, 2) + "";

            this.jTextFieldLs.setText(Ls);
        }

        // Wq = Lq / λ
        if (!lambda.equals("") && !Lq.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double LqD = Double.parseDouble(Lq);
            double WqD = LqD / lambdaD;
            Wq = truncateDecimal(WqD, 2) + "";

            this.jTextFieldWq.setText(Wq);
        }

        // Ws = Wq + (1/μ)        
        if (!lambda.equals("") && !miu.equals("")) {
            double miuD = Double.parseDouble(miu);
            double WqD = Double.parseDouble(Wq);
            try {
                double WsD = WqD + (1 / miuD);
                Ws = truncateDecimal(WsD, 2) + "";

                this.jTextFieldWs.setText(Ws);
            } catch (NumberFormatException ex) {
                this.jTextFieldWs.setText("Error en el valor de μ.");
            }
        }
    }//GEN-LAST:event_jTextFieldMiuKeyReleased

    private void jTextFieldLsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLsKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
    }//GEN-LAST:event_jTextFieldLsKeyReleased

    private void jTextFieldLqKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLqKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
    }//GEN-LAST:event_jTextFieldLqKeyReleased

    private void jTextFieldWsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldWsKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
    }//GEN-LAST:event_jTextFieldWsKeyReleased

    private void jTextFieldWqKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldWqKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
        String P0 = "";
        String n = this.jTextFieldN.getText();
        
        //P = λ / μ
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double PD = lambdaD / miuD;
            P = truncateDecimal(PD, 2) + "";

            this.jTextFieldP.setText(P);
        }

        //Po = 1 - (λ / μ)
        if (!lambda.equals("") && !miu.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double miuD = Double.parseDouble(miu);
            double P0D = 1 - (lambdaD / miuD);
            P0 = truncateDecimal(0, 2) + "";
        }        
        
        // Pn = (1 - p) * p^n      
        if (!P.equals("") && !n.equals("")) {
            double PD = Double.parseDouble(P);
            double PnD = (1 - PD) * Math.pow(PD, Double.parseDouble(n));
            Pn = truncateDecimal(PnD, 2) + "";

            this.jTextFieldPn.setText(Pn);
        }

        // Lq = λ * Wq
        if (!lambda.equals("") && !Wq.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double WqD = Double.parseDouble(Wq);
            double LqD = lambdaD * WqD;
            Lq = truncateDecimal(LqD, 2) + "";

            this.jTextFieldLq.setText(Lq);
        }       

        // Ws = Wq + (1/μ)        
        if (!lambda.equals("") && !Wq.equals("")) {
            double miuD = Double.parseDouble(miu);
            double WqD = Double.parseDouble(Wq);
            try {
                double WsD = WqD + (1 / miuD);
                Ws = truncateDecimal(WsD, 2) + "";

                this.jTextFieldWs.setText(Ws);
            } catch (NumberFormatException ex) {
                this.jTextFieldWs.setText("Error en el valor de μ.");
            }
        }
        
        // Ls = Ws * λ     
        if (!lambda.equals("") && !Ws.equals("")) {
            double lambdaD = Double.parseDouble(lambda);
            double WsD = Double.parseDouble(Ws);
            double LsD = lambdaD * WsD;
            Ls = truncateDecimal(LsD, 2) + "";

            this.jTextFieldLs.setText(Ls);
        }
    }//GEN-LAST:event_jTextFieldWqKeyReleased

    private void jTextFieldPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
    }//GEN-LAST:event_jTextFieldPKeyReleased

    private void jTextFieldPnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPnKeyReleased
        String lambda = this.jTextFieldLambda.getText();
        String miu = this.jTextFieldMiu.getText();
        String Ls = this.jTextFieldLs.getText();
        String Lq = this.jTextFieldLq.getText();
        String Ws = this.jTextFieldWs.getText();
        String Wq = this.jTextFieldWq.getText();
        String P = this.jTextFieldP.getText();
        String Pn = this.jTextFieldPn.getText();
    }//GEN-LAST:event_jTextFieldPnKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldLambda;
    private javax.swing.JTextField jTextFieldLq;
    private javax.swing.JTextField jTextFieldLs;
    private javax.swing.JTextField jTextFieldMiu;
    private javax.swing.JTextField jTextFieldN;
    private javax.swing.JTextField jTextFieldP;
    private javax.swing.JTextField jTextFieldPn;
    private javax.swing.JTextField jTextFieldWq;
    private javax.swing.JTextField jTextFieldWs;
    // End of variables declaration//GEN-END:variables

    private static BigDecimal truncateDecimal(double x, int numberofDecimals) {
        if (x > 0) {
            return new BigDecimal(String.valueOf(x)).setScale(numberofDecimals, BigDecimal.ROUND_FLOOR);
        } else {
            return new BigDecimal(String.valueOf(x)).setScale(numberofDecimals, BigDecimal.ROUND_CEILING);
        }
    }
    
    static double fact(double b) {
      if(b <= 1) {
         return 1;
      } else {
         return b * fact(b-1);
      }
   }
}
